module RAM(
    input clk,
    input we,
    input [3:0] addr,
    input [7:0] din,
    output reg [7:0] dout
);
    reg [7:0] memory[15:0];
    always @(posedge clk) begin
        if (we)
            memory[addr] <= din;     
        else
            dout <= memory[addr];    
    end
endmodule
module RAM_tb1();
    reg clk, we;
    reg [3:0] addr;
    reg [7:0] din;
    wire [7:0] dout;
    RAM uut(.clk(clk), .we(we), .addr(addr), .din(din), .dout(dout));
    always #25 clk = ~clk;
    initial begin
        $monitor("Time=%0t | clk=%b | we=%b | addr=%h | din=%h | dout=%h", 
                  $time, clk, we, addr, din, dout);
        clk = 0;
        #10 we = 1; addr = 4'b0001; din = 8'b10101010;
        #50;
        we = 0; addr = 4'b0001; din = 8'b00000000;
        #50;
        $finish;
    end
endmodule
